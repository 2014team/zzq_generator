<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.generator.dao.UserDao">

	<!-- resultMap -->
	<resultMap type="com.generator.domain.entity.User" id="resultMap">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="roleId" column="role_id" />
		<result property="validFlag" column="valid_Flag" />
		<result property="sortId" column="sort_id" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
	</resultMap>

	<!--保存 -->
	<insert id="save" parameterType="com.generator.domain.entity.User">
		insert into
		`t_admin_user`(user_name,password,role_id,valid_Flag,sort_id)
		values(#{userName},#{password},#{roleId},#{validFlag},#{sortId});
	</insert>

	<!--删除 -->
	<delete id="delete" parameterType="Integer">
		delete from
		`t_admin_user`
		where user_id=#{userId};
	</delete>

	<!-- 批量删除 -->
	<delete id="deleteByBatch"  parameterType="java.util.List">
		delete from
		`t_admin_user`
		where user_id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>

	<!-- 修改 -->
	<update id="update" parameterType="com.generator.domain.entity.User">
		update `t_admin_user`
		set
		user_name=#{userName}
		,password=#{password}
		,role_id=#{roleId}
		,valid_flag=#{validFlag}
		,sort_id=#{sortId}
		where
		user_id=#{userId};
	</update>

	<!-- 单个查找 -->
	<select id="get" parameterType="Integer" resultMap="resultMap">
		select user_id,user_name,password,role_id,valid_Flag,sort_id,create_date,update_date from
		`t_admin_user`
		where user_id = #{userId}
		order by sort_id limit 1;
	</select>
	
	<!-- 通过Map单个查找-->
	<select id="getOneByMap" parameterType="Map" resultMap="resultMap">
		select user_id,user_name,password,role_id,valid_Flag,sort_id,create_date,update_date from
		`t_admin_user`
		<where>
			<if test="null != userId and '' != userId">
				user_id = #{userId}
			</if>
			<if test="null != userName and '' != userName">
				and user_name = #{userName}
			</if>
			<if test="null != password and '' != password">
				and password = #{password}
			</if>
			<if test="null != validFlag">
				and valid_Flag = #{validFlag}
			</if>
		</where>
		order by sort_id limit 1;
	</select>
	
	

	<!-- 列表查询 -->
	<select id="select" parameterType="Map" resultMap="resultMap">
		select user_id,user_name,password,role_id,valid_Flag,sort_id,create_date,update_date from
		`t_admin_user`
		<where>
			<if test="null != userId and '' != userId">
				user_id = #{userId}
			</if>
			<if test="null != userName and '' != userName">
				and user_name = #{userName}
			</if>
		</where>
		order by sort_id;
	</select>


	<!-- 分页查找 -->
	<select id="findByPage" parameterType="Map" resultMap="resultMap">
		select user_id,user_name,password,role_id,valid_Flag,sort_id,create_date,update_date from `t_admin_user`
		<where>
			<![CDATA[ user_name <> 'admin']]>
			<if test="userVo.userName != null and '' != userVo.userName">
				and user_name=#{userVo.userName}
			</if>
			<if test="userVo.roleId != null and '' != userVo.roleId">
				and role_id=#{userVo.roleId}
			</if>
			<if test="userVo.startDate != null and '' != userVo.startDate and userVo.endDate != null and '' != userVo.endDate">
				<![CDATA[and create_date >= #{userVo.startDate} and create_date <= #{userVo.endDate}]]>
			</if>
			
		</where>
		order by sort_id,update_date desc  limit ${page.begin},${page.limit} ;
	</select>
	
	<!-- 分页查找数量 -->
	<select id="findByPageCount" parameterType="Map" resultType="Integer">
		select count(1) from `t_admin_user`
		   
		<where>
		    <![CDATA[ user_name <> 'admin']]>
			<if test="userVo.userName != null and '' != userVo.userName">
				and user_name=#{userVo.userName}
			</if>
			<if test="userVo.roleId != null and '' != userVo.roleId">
				and role_id=#{userVo.roleId}
			</if>
			<if test="userVo.startDate != null and '' != userVo.startDate and userVo.endDate != null and '' != userVo.endDate">
				<![CDATA[and create_date >= #{userVo.startDate} and create_date <= #{userVo.endDate}]]>
			</if>
		</where>
	</select>

</mapper> 